[workspace]
members = [
  "crates/*",
  "xtask",
  "ffi",
]
resolver = "2"

# FIXME: fix compilation
exclude = [
  "crates/ironrdp-client-glutin",
  "crates/ironrdp-glutin-renderer",
  "crates/ironrdp-replay-client",
]

[workspace.package]
edition = "2021"
license = "MIT/Apache-2.0"
homepage = "https://github.com/Devolutions/IronRDP"
repository = "https://github.com/Devolutions/IronRDP"
authors = ["Devolutions Inc. <infos@devolutions.net>", "Teleport <goteleport.com>"]
keywords = ["rdp", "remote-desktop", "network", "client", "protocol"]
categories = ["network-programming"]

[workspace.dependencies]
ironrdp-acceptor = { version = "0.1", path = "crates/ironrdp-acceptor" }
ironrdp-ainput = { version = "0.1", path = "crates/ironrdp-ainput" }
ironrdp-async = { version = "0.1", path = "crates/ironrdp-async" }
ironrdp-blocking = { version = "0.1", path = "crates/ironrdp-blocking" }
ironrdp-cliprdr = { version = "0.1", path = "crates/ironrdp-cliprdr" }
ironrdp-cliprdr-native = { version = "0.1", path = "crates/ironrdp-cliprdr-native" }
ironrdp-cliprdr-format = { version = "0.1", path = "crates/ironrdp-cliprdr-format" }
ironrdp-core = { version = "0.1", path = "crates/ironrdp-core" }
ironrdp-connector = { version = "0.1", path = "crates/ironrdp-connector" }
ironrdp-dvc = { version = "0.1", path = "crates/ironrdp-dvc" }
ironrdp-displaycontrol = { version = "0.1", path = "crates/ironrdp-displaycontrol" }
ironrdp-error = { version = "0.1", path = "crates/ironrdp-error" }
ironrdp-futures = { version = "0.1", path = "crates/ironrdp-futures" }
ironrdp-fuzzing = { path = "crates/ironrdp-fuzzing" }
ironrdp-graphics = { version = "0.1", path = "crates/ironrdp-graphics" }
ironrdp-input = { version = "0.1", path = "crates/ironrdp-input" }
ironrdp-pdu-generators = { path = "crates/ironrdp-pdu-generators" }
ironrdp-pdu = { version = "0.1", path = "crates/ironrdp-pdu" }
ironrdp-rdcleanpath = { version = "0.1", path = "crates/ironrdp-rdcleanpath" }
ironrdp-rdpdr = { version = "0.1", path = "crates/ironrdp-rdpdr" }
ironrdp-rdpdr-native = { version = "0.1", path = "crates/ironrdp-rdpdr-native" }
ironrdp-rdpsnd = { version = "0.1", path = "crates/ironrdp-rdpsnd" }
ironrdp-rdpsnd-native = { version = "0.1", path = "crates/ironrdp-rdpsnd-native" }
ironrdp-server = { version = "0.1", path = "crates/ironrdp-server" }
ironrdp-session-generators = { path = "crates/ironrdp-session-generators" }
ironrdp-session = { version = "0.1", path = "crates/ironrdp-session" }
ironrdp-svc = { version = "0.1", path = "crates/ironrdp-svc" }
ironrdp-testsuite-core = { path = "crates/ironrdp-testsuite-core" }
ironrdp-tls = { version = "0.1", path = "crates/ironrdp-tls" }
ironrdp-tokio = { version = "0.1", path = "crates/ironrdp-tokio" }
ironrdp = { version = "0.5", path = "crates/ironrdp" }
now-proto-pdu = { version = "0.1", path = "crates/now-proto-pdu" }

bitflags = "2.4"
expect-test = "1"
png = "0.17"
proptest = "1.4"
rstest = "0.18"
sspi = "0.13"
tracing = { version = "0.1", features = ["log"] }
thiserror = "1.0"
windows = "0.58"

# Note: we are trying to move away from using these crates.
# They are being kept around for now for legacy compatibility,
# but new usage should be avoided.
byteorder = "1.5"
lazy_static = "1.4" # prefer https://doc.rust-lang.org/std/sync/struct.OnceLock.html
num-derive = "0.4"
num-traits = "0.2"

[workspace.lints.rust]
# Safer unsafe
unsafe_op_in_unsafe_fn = "warn"
invalid_reference_casting = "warn"
pointer_structural_match = "warn"
# Correctness
unused_tuple_struct_fields = "warn"
# Style, readability
# https://quinedot.github.io/rust-learning/dont-hide.htm
elided_lifetimes_in_paths = "warn"
absolute_paths_not_starting_with_crate = "warn"
single_use_lifetimes = "warn"
unreachable_pub = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"
keyword_idents = "warn"
noop_method_call = "warn"
# TODO: NOTE(@CBenoit): we probably want to ensure this in core tier crates only
# missing_docs = "warn"
# Compile-time / optimization
# Note: buggy with dev-dependencies or multiple targets
# unused_crate_dependencies = "warn"
unused_macro_rules = "warn"

[workspace.lints.clippy]
# Safer unsafe
undocumented_unsafe_blocks = "warn"
# FIXME: https://github.com/rust-lang/rust-clippy/issues/11312 (fixed for 1.75.0)
# multiple_unsafe_ops_per_block = "warn"
transmute_ptr_to_ptr = "warn"
as_ptr_cast_mut = "warn"
cast_ptr_alignment = "warn"
fn_to_numeric_cast_any = "warn"
ptr_cast_constness = "warn"
# Correctness
arithmetic_side_effects = "warn"
cast_lossless = "warn"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
cast_sign_loss = "warn"
float_cmp = "warn"
as_underscore = "warn"
# TODO: let’s either handle `None`, `Err` or use `expect` to give a reason
# unwrap_used = "warn"
large_stack_frames = "warn"
# Style, readability
# with semicolon-outside-block-ignore-multiline = true
semicolon_outside_block = "warn"
clone_on_ref_ptr = "warn"
cloned_instead_of_copied = "warn"
trait_duplication_in_bounds = "warn"
type_repetition_in_bounds = "warn"
checked_conversions = "warn"
get_unwrap = "warn"
# TODO: reduce risk of confusing similar names together, and protects against
# typos when variable shadowing was intended
# similar_names = "warn"
str_to_string = "warn"
string_to_string = "warn"
# TODO: std_instead_of_alloc = "warn"
# TODO: std_instead_of_core = "warn"
separated_literal_suffix = "warn"
unused_self = "warn"
# TODO: use_self = "warn" # NOTE(@CBenoit): not sure about that one
useless_let_if_seq = "warn"
# TODO: partial_pub_fields = "warn"
string_add = "warn"
range_plus_one = "warn"
# Compile-time / optimization
inline_always = "warn"
or_fun_call = "warn"
unnecessary_box_returns = "warn"
# Extra-pedantic clippy
collection_is_never_read = "warn"
copy_iterator = "warn"
expl_impl_clone_on_copy = "warn"
implicit_clone = "warn"
large_types_passed_by_value = "warn"
redundant_clone = "warn"
alloc_instead_of_core = "warn"
empty_drop = "warn"
return_self_not_must_use = "warn"
wildcard_dependencies = "warn"
# Let’s not merge unintended eprint!/print! statements in libraries
print_stderr = "warn"
print_stdout = "warn"
dbg_macro = "warn"

[profile.dev]
opt-level = 1

[profile.production]
inherits = "release"
lto = true

[profile.production-wasm]
inherits = "release"
opt-level = "s"
lto = true

[profile.test.package.proptest]
opt-level = 3

[profile.test.package.rand_chacha]
opt-level = 3
