name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
  workflow_dispatch:

env:
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Check formatting
        run: cargo xtask check fmt

  lints:
    name: Lints
    runs-on: ubuntu-20.04
    needs: formatting

    steps:
      - uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/
            ~/.cargo/git/
            ./target/
          key: ${{ runner.os }}-lints-${{ hashFiles('Cargo.lock') }}

      - name: Check clippy
        run: cargo xtask check lints

  wasm:
    name: WASM target
    runs-on: ubuntu-latest
    needs: formatting

    steps:
      - uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/
            ~/.cargo/git/
            ./target/
          key: ${{ runner.os }}-wasm-${{ hashFiles('ffi/wasm/Cargo.lock') }}

      - name: Prepare runner
        run: |
          sudo apt install wabt
          cargo xtask wasm install

      - name: Check
        run: cargo xtask check wasm

  tests:
    name: Tests [${{ matrix.os }}]
    runs-on: ${{ matrix.runner }}
    needs: formatting
    strategy:
      fail-fast: false
      matrix:
        os: [ windows, linux ]
        include:
          - os: windows
            runner: windows-2019
          - os: linux
            runner: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/
            ~/.cargo/git/
            ./target/
          key: ${{ runner.os }}-tests-${{ hashFiles('Cargo.lock') }}

      - name: Test [${{ matrix.os }}]
        run: cargo xtask check tests

  fuzz:
    name: Fuzzing
    runs-on: ubuntu-20.04
    needs: formatting

    steps:
      - uses: actions/checkout@v3

      - name: Fuzz build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/
            ~/.cargo/git/
            ./target/
            ./fuzz/target/
          key: ${{ runner.os }}-fuzz-${{ hashFiles('fuzz/Cargo.lock') }}

      - name: Prepare runner
        run: cargo xtask fuzz install

      # Simply run all fuzz targets for a few seconds, just making there is nothing obviously wrong at a quick glance
      - name: Fuzz
        run: cargo xtask fuzz run
