[package]
name = "ironrdp-web"
version = "0.1.0"
readme = "README.md"
description = "WebAssembly high-level bindings targeting web browsers"
publish = false
edition.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true
authors.workspace = true
keywords.workspace = true
categories.workspace = true

[lib]
doctest = false
test = false
crate-type = ["cdylib", "rlib"]

[features]
default = ["panic_hook"]
panic_hook = ["dep:console_error_panic_hook"]

[dependencies]

# Protocols
ironrdp = { workspace = true, features = ["input", "graphics"] }
ironrdp-futures.workspace = true
ironrdp-rdcleanpath.workspace = true

# WASM
wasm-bindgen = "0.2.84"
wasm-bindgen-futures = "0.4.34"
js-sys = "0.3.61"
gloo-net = "0.2.6"
tracing-web = "0.1.2"

# Enable WebAssembly support for a few crates
getrandom = { version = "0.2", features = ["js"] }
chrono = { version = "0.4", features = ["wasmbind"] }
time = { version = "0.3", features = ["wasm-bindgen"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }

# Async
futures-util = { version = "0.3", features = ["sink", "io"] }
futures-channel = "0.3"

# Logging
tracing.workspace = true
tracing-subscriber = { version = "0.3.16", features = ["time"] }

# Utils
anyhow = "1"
smallvec = "1.10.0"
x509-cert = { version = "0.2.1", default-features = false, features = ["std"] }
tap = "1.0.1"
semver = "1"
